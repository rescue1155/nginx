
upstream backend {
    server leakimedia.com:443;
    keepalive 32;
}

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        access_log off;
        error_log off;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name cdn01.leakimedia.com;

    access_log off;
    error_log off;

    ssl_certificate /root/.acme.sh/cdn01.leakimedia.com_ecc/fullchain.cer;
    ssl_certificate_key /root/.acme.sh/cdn01.leakimedia.com_ecc/cdn01.leakimedia.com.key;

        location /data/ {
            #alias /var/www/html/data;  # Local path for internal_data
            root /var/www/html;
            try_files $uri @fetch_remote;
        }

        location /internal_data/attachments/ {
            #alias /var/www/html/data;  # Local path for internal_data
            root /var/www/html;
            try_files $uri @fetch_remote;
        }

        location @fetch_remote {
            proxy_pass https://leakimedia.com;
            resolver 8.8.8.8 ipv6=off;

            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_verify off;

            proxy_set_header Host leakimedia.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Accept-Encoding "";


            # Enable caching
            #proxy_cache REMOTE_CACHE;
            #proxy_cache_valid 200 302 30m;  # Cache 200 and 302 responses for 30 minutes
            #proxy_cache_valid 404 10m;       # Cache 404 responses for 10 minutes
            #proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            #proxy_cache_lock on;
            #add_header X-Cache $upstream_cache_status;
        }

        location / {
          root /var/www/html;
          index index.html index.htm;
          try_files $uri $uri/ =404;
        }

}



# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
